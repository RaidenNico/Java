package form;

import bd.AuthorDB;
import entity.*;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Juan Carlos Camayo
 */
public class frmAuthor extends javax.swing.JFrame {

    /**
     * Creates new form frmAuthor
     */
    public frmAuthor() {
        initComponents();
        AuthorDB db = new AuthorDB();
        listar(db.getAuthors());
        lblId.setVisible((cbOpcion.getSelectedIndex() != 0));
        txtId.setVisible((cbOpcion.getSelectedIndex() != 0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblOpcion = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblCorreo = new javax.swing.JLabel();
        cbOpcion = new javax.swing.JComboBox<>();
        txtId = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        btnBorrar = new javax.swing.JButton();
        btnProcesar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAuthor = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblOpcion.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblOpcion.setText("Opci√≥n:");

        lblId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblId.setText("Id:");

        lblNombre.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblNombre.setText("Nombre:");

        lblCorreo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblCorreo.setText("Correo:");

        cbOpcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ingresar", "Consultar", "Modificar", "Eliminar" }));
        cbOpcion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbOpcionItemStateChanged(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnProcesar.setText("Procesar");
        btnProcesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcesarActionPerformed(evt);
            }
        });

        tbAuthor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Correo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbAuthor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnProcesar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBorrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblCorreo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 140, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblOpcion)
                            .addComponent(cbOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblId)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnProcesar)
                        .addGap(3, 3, 3)
                        .addComponent(btnBorrar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCorreo)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcesarActionPerformed
        
        switch (cbOpcion.getSelectedIndex()) {
            case 0: ingresar(); break;
            case 1: consultar(); break;
            case 2: modificar(); break;
            default: eliminar();
        }
        
    }//GEN-LAST:event_btnProcesarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void cbOpcionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbOpcionItemStateChanged
        
        int opcion = cbOpcion.getSelectedIndex();
        boolean visible = true;
        if(opcion == 1 || opcion == 3){
            visible = false;
        }
        lblNombre.setVisible(visible);
        txtNombre.setVisible(visible);
        lblCorreo.setVisible(visible);
        txtCorreo.setVisible(visible);
        
        lblId.setVisible((opcion != 0));
        txtId.setVisible((opcion != 0));
        
    }//GEN-LAST:event_cbOpcionItemStateChanged

    //<editor-fold defaultstate="collapsed" desc=" Gets de formulario ">
        private int getId(){
            return Integer.parseInt(txtId.getText());
        }
        private String getNombre(){
            return txtNombre.getText();
        }
        private String getCorreo(){
            return txtCorreo.getText();
        }
    //</editor-fold>
    
    //<editor-fold defaultstate="collapsed" desc=" Metodos genericos ">  
        public void mensajeError(String mensaje){
            mensaje(mensaje, "Mensaje de error", JOptionPane.ERROR_MESSAGE);
        }
        public void mensaje(String mensaje, String titulo, int tipo){
            JOptionPane.showMessageDialog(this, mensaje, titulo, tipo);
        }
        
        public void listar(ArrayList<Author> lista){
            if(lista.size() > 0){
                DefaultTableModel df = ((DefaultTableModel)tbAuthor.getModel());
                df.setRowCount(0);
                for (Author author : lista) {
                    df.addRow(new Object[] {
                        author.getAuthorId(),
                        author.getName(),
                        author.getEmail()
                    });
                }
            }else{
                mensaje("No hay registros", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        
        public Author buscarId(ArrayList<Author> lista, int id){
            for (Author author : lista) {
                if(author.getAuthorId() == id){
                    return author;
                }
            }
            return null;
        }
        
        public void limpiar(){
            txtId.setText("");
            txtNombre.setText("");
            txtCorreo.setText("");
            cbOpcion.setSelectedIndex(0);
        }
    //</editor-fold>
    
    public void ingresar(){
        try{
            AuthorDB db = new AuthorDB();
            db.createAuthor(getNombre(), getCorreo());
            listar(db.getAuthors());
            limpiar();
            mensaje("Author ingresado", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception ex){
            mensajeError(ex.getMessage());
        }
    }
    
    public void consultar(){
        AuthorDB db = new AuthorDB();
        Author author = buscarId(db.getAuthors(), getId());
        if(author != null){
            String mensaje = "Id: " + author.getAuthorId() + "\n" +
                             "Nombre: " + author.getName() + "\n" +
                             "Correo: " + author.getEmail(); 
            limpiar();
            mensaje(mensaje, "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }else{
            mensajeError("Autor no existe.");
        }
    }
    
    public void modificar()
    {
        AuthorDB db = new AuthorDB();
        Author author = buscarId(db.getAuthors(), getId());
        if(author != null){
            db.updateAuthor(getId(), getNombre(), getCorreo());
            listar(db.getAuthors());
            limpiar();
            mensaje("Autor modificado", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }else{
            mensajeError("Autor no existe.");
        }
    }
    
    public void eliminar(){
        try{
            AuthorDB db = new AuthorDB();
            Author author = buscarId(db.getAuthors(), getId());
            if(author != null){
                db.deleteAuthor(author.getAuthorId());
                listar(db.getAuthors());
                limpiar();
                mensaje("Autor eliminado", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }else{
                mensajeError("Autor no existe.");
            }
        }catch(Exception ex){
            mensajeError(ex.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAuthor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAuthor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAuthor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAuthor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmAuthor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnProcesar;
    private javax.swing.JComboBox<String> cbOpcion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCorreo;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblOpcion;
    private javax.swing.JTable tbAuthor;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
